/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package color.code.app;

import java.awt.Color;

import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;

/**
 *
 * @author user
 */
public class ColorCodeApp extends javax.swing.JFrame {

    /**
     * Creates new form ColorCodeApp
     */
    public ColorCodeApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jLabelB = new javax.swing.JLabel();
        jLabelA = new javax.swing.JLabel();
        jLabelC = new javax.swing.JLabel();
        aInputTextBox = new javax.swing.JSpinner();
        bInputTextBox = new javax.swing.JSpinner();
        cInputTextBox = new javax.swing.JSpinner();
        bgColorRadioBtn = new javax.swing.JRadioButton();
        fgColorRadioBtn = new javax.swing.JRadioButton();
        colorLabel = new javax.swing.JLabel();
        aSlider = new javax.swing.JSlider();
        bSlider = new javax.swing.JSlider();
        cSlider = new javax.swing.JSlider();
        bSliderLabel = new javax.swing.JLabel();
        aSliderLabel = new javax.swing.JLabel();
        cSliderLabel = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        copyBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelB.setText("G");

        jLabelA.setText("R");

        jLabelC.setText("C");

        aInputTextBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                aInputTextBoxStateChanged(evt);
            }
        });

        bInputTextBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bInputTextBoxStateChanged(evt);
            }
        });

        cInputTextBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cInputTextBoxStateChanged(evt);
            }
        });

        bgColorRadioBtn.setText("BackGround Color");
        bgColorRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgColorRadioBtnActionPerformed(evt);
            }
        });

        fgColorRadioBtn.setText("ForeGround Color");
        fgColorRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fgColorRadioBtnActionPerformed(evt);
            }
        });

        colorLabel.setBackground(new java.awt.Color(255, 255, 255));
        colorLabel.setOpaque(true);

        aSlider.setMaximum(255);
        aSlider.setPaintTicks(true);
        aSlider.setValue(0);
        aSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                aSliderStateChanged(evt);
            }
        });

        bSlider.setMaximum(255);
        bSlider.setPaintTicks(true);
        bSlider.setValue(0);
        bSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bSliderStateChanged(evt);
            }
        });

        cSlider.setMaximum(255);
        cSlider.setPaintTicks(true);
        cSlider.setValue(0);
        cSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cSliderStateChanged(evt);
            }
        });

        bSliderLabel.setText("G");

        aSliderLabel.setText("R");

        cSliderLabel.setText("B");

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Monotype Corsiva", 1, 13)); // NOI18N
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"");
        textArea.setToolTipText("");
        textArea.setWrapStyleWord(true);
        scrollPane.setViewportView(textArea);

        copyBtn.setText("COPY");
        copyBtn.setActionCommand("COPY");
        copyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cSliderLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bSliderLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                    .addComponent(aSliderLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 81, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(aInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(aSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                    .addComponent(bSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(42, 42, 42))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabelB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(copyBtn)
                                .addContainerGap())))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bgColorRadioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(fgColorRadioBtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(scrollPane))
                        .addContainerGap())))
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabelA, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(347, Short.MAX_VALUE)))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelC, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bInputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copyBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aSliderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSliderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cSliderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fgColorRadioBtn)
                    .addComponent(bgColorRadioBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabelA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(256, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bgColorRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgColorRadioBtnActionPerformed
        aInputTextBox.setValue(aSlider.getValue());
        bInputTextBox.setValue(bSlider.getValue());
        cInputTextBox.setValue(cSlider.getValue());
        
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_bgColorRadioBtnActionPerformed

    private void copyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBtnActionPerformed
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(new StringSelection(
                "["+aInputTextBox.getValue()+", "+bInputTextBox.getValue()
                        +", "+cInputTextBox.getValue()+"]"), null);
    }//GEN-LAST:event_copyBtnActionPerformed

    private void bSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bSliderStateChanged
        aInputTextBox.setValue(aSlider.getValue());
        bInputTextBox.setValue(bSlider.getValue());
        cInputTextBox.setValue(cSlider.getValue());
        
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_bSliderStateChanged

    private void cSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cSliderStateChanged
        aInputTextBox.setValue(aSlider.getValue());
        bInputTextBox.setValue(bSlider.getValue());
        cInputTextBox.setValue(cSlider.getValue());
        
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_cSliderStateChanged

    private void aSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_aSliderStateChanged
        aInputTextBox.setValue(aSlider.getValue());
        bInputTextBox.setValue(bSlider.getValue());
        cInputTextBox.setValue(cSlider.getValue());

        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_aSliderStateChanged

    private void aInputTextBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_aInputTextBoxStateChanged
        aSlider.setValue((int) aInputTextBox.getValue());
        bSlider.setValue((int) bInputTextBox.getValue());
        cSlider.setValue((int) cInputTextBox.getValue());
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_aInputTextBoxStateChanged

    private void fgColorRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fgColorRadioBtnActionPerformed
        aInputTextBox.setValue(aSlider.getValue());
        bInputTextBox.setValue(bSlider.getValue());
        cInputTextBox.setValue(cSlider.getValue());
        
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((Integer)aInputTextBox.getValue(),
                    (Integer)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_fgColorRadioBtnActionPerformed

    private void bInputTextBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bInputTextBoxStateChanged
        aSlider.setValue((int) aInputTextBox.getValue());
        bSlider.setValue((int) bInputTextBox.getValue());
        cSlider.setValue((int) cInputTextBox.getValue());
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_bInputTextBoxStateChanged

    private void cInputTextBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cInputTextBoxStateChanged
        aSlider.setValue((int) aInputTextBox.getValue());
        bSlider.setValue((int) bInputTextBox.getValue());
        cSlider.setValue((int) cInputTextBox.getValue());
        if(bgColorRadioBtn.isSelected()){
            colorLabel.setBackground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
        if(fgColorRadioBtn.isSelected()){
            textArea.setForeground(new Color((int)aInputTextBox.getValue(),
                (int)bInputTextBox.getValue(),(int)cInputTextBox.getValue()));
        }
    }//GEN-LAST:event_cInputTextBoxStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColorCodeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColorCodeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColorCodeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColorCodeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ColorCodeApp().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner aInputTextBox;
    private javax.swing.JSlider aSlider;
    private javax.swing.JLabel aSliderLabel;
    private javax.swing.JSpinner bInputTextBox;
    private javax.swing.JSlider bSlider;
    private javax.swing.JLabel bSliderLabel;
    private javax.swing.JRadioButton bgColorRadioBtn;
    private javax.swing.JSpinner cInputTextBox;
    private javax.swing.JSlider cSlider;
    private javax.swing.JLabel cSliderLabel;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JButton copyBtn;
    private javax.swing.JRadioButton fgColorRadioBtn;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JLabel jLabelB;
    private javax.swing.JLabel jLabelC;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
